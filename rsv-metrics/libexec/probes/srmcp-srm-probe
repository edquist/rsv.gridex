#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename;
use RSVMetric;

print_output_header();

my %extra_opts = ("srm-destination-dir=s"  => "Required: Remote destination to put temp file",
                  "srm-webservice-path=s"  => "Required: Remote webservice path, e.g. srm/v2/server",
                  "srm-protocol-version=i" => "1 or 2");

my %options = process_command_line(%extra_opts);

$options{'srm-protocol-version'} ||= 2;

if(!defined($options{'srm-destination-dir'}) or !defined($options{'srm-webservice-path'})) {
    print "ERROR: You must pass both --srm-destination-dir and --srm-webservice-path\n\n";
    usage(%extra_opts);
}

find_binaries("srm-copy", "srm-ls", "srm-rm");

# 
# Transfer to the remote server
#

my $local_file = "/usr/share/rsv/probe-helper-files/storage-probe-test-file";
my $local_uri = "file://$local_file";

if(!-e $local_file) {
    print "CRITICAL\n";
    print "The helper file is missing from '$local_file'.\n";
    print "Your RSV installation may be incomplete or corrupt.\n";
    exit 0;
}

my $time = time;
my $remote_file = basename($local_file) . ".$time.$$";
my $remote_uri = "srm://$options{u}/$options{'srm-webservice-path'}?SFN=$options{'srm-destination-dir'}/$remote_file";

# TODO - might need '-x509_user_proxy=' included in here
my $srm_copy_cmd = "srm-copy $local_uri $remote_uri 2>&1";
my $out = `$srm_copy_cmd`;
if($? != 0) {
    print "CRITICAL\n";
    print "Failed to transfer file to remote server.\n";
    print "Command: $srm_copy_cmd\n";
    print "Output from srm-copy:\n$out\n";
    exit 0;
}
else {
    print STDERR "Successful transfer to remote server.\n";
    print STDERR "Command: $srm_copy_cmd\n";
    print STDERR "Output from srm-copy:\n$out\n\n";
}

#
# Transfer file back from remote server
#

my $new_local_file = "/tmp/$remote_file";
my $new_local_uri = "file://$new_local_file";

# TODO - might need '-x509_user_proxy=' included in here
$srm_copy_cmd = "srm-copy $remote_uri $new_local_uri 2>&1";
$out = `$srm_copy_cmd`;
if($? != 0) {
    print "CRITICAL\n";
    print "Successful transfer to remote server.\n";
    print "Failed to transfer file from remote server.\n";
    print "Command: $srm_copy_cmd\n";
    print "Output from srm-copy:\n$out\n";
    cleanup_files();
    exit 0;
}
else {
    print STDERR "Successful transfer from remote server.\n";
    print STDERR "Command: $srm_copy_cmd\n";
    print STDERR "Output:\n$out\n\n";
}


# 
# Compare files
#
$out = `diff $local_file $new_local_file`;
if($? != 0) {
    print "CRITICAL\n";
    print "Successful transfer to remote server.\n";
    print "Successful transfer from remote server.\n";
    print "The file that was returned from the remote server does not match the original file.\n";
    print "Diff:\n$out\n";
    cleanup_files();
    exit 0;
}


# 
# List file from remote host
#

# The original srmcp-srm-probe did this, so we'll preserve this behavior
my $srm_ls_cmd = "srm-ls $remote_uri 2>&1";
$out = `$srm_ls_cmd`;
if($? != 0) {
    print "CRITICAL\n";
    print "Successful transfer to remote server.\n";
    print "Successful transfer from remote server.\n";
    print "Original file and received file are identical.\n";
    print "The remote file could not be listed using srm-ls.\n";
    print "Command: $srm_ls_cmd\n";
    print "Output:\n$out\n";
    cleanup_files();
    exit 0;
}

cleanup_files();
print "OK\n";
print "Successful transfer to remote host.\n";
print "Successful transfer from remote host.\n";
print "Original file and received file are identical.\n";
print "Remote file was properly listed using srm-ls.\n";
exit 0;


sub cleanup_files {
    # First the local file
    if($new_local_file and -e $new_local_file) {
        if(not unlink($new_local_file)) {
            print STDERR "Failed to unlink existing local file '$new_local_file': $!";
        }
    }

    # And also the remote file
    my $out = `srm-rm $remote_uri`;
    if (($? != 0)||($out =~ /SRM_FAILURE/)) {
        print STDERR "Failed to remove remote file '$remote_uri'.  Output:\n$out\n";
        print "WARNING\n";
        print "Successful transfer to remote server.\n";
        print "Successful transfer from remote server.\n";
        print "Original file and received file are identical.\n";
        print "However, remote file could not be deleted correctly.\n";
        print "Command: srm-rm $remote_uri\n";
        print "Output:\n$out\n";
        exit 0;
    }
}
