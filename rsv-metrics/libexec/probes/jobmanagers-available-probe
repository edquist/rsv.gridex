#!/usr/bin/env perl

use strict;
use warnings;
use RSVMetric;
use Config;

print_output_header();

my $DEFAULT_GATEKEEPER_TYPE = 'gram';

my %options = process_command_line('gatekeeper-type=s' => "Either 'gram' or 'condor-ce'");

my $gatekeeper_type = $DEFAULT_GATEKEEPER_TYPE;
if (defined($options{'gatekeeper-type'})) {
    $gatekeeper_type = lc $options{'gatekeeper-type'};
}

if ($gatekeeper_type eq 'gram') {
    my $directory;
    if(defined $ENV{OSG_LOCATION}) {
        $directory = "$ENV{OSG_LOCATION}/globus/lib/perl/Globus/GRAM/JobManager";
    }
    else {
        $directory = $Config{vendorlib} . "/Globus/GRAM/JobManager";
    }

    if(!-d $directory) {
        print "CRITICAL\n";
        print "The job manager directory ($directory) does not exist on the remote host.\n";
        exit 0;
    }

    opendir(DIR, $directory);
    my @files = readdir(DIR);
    closedir(DIR);

    my @jms;
    foreach my $file (@files) {
        push @jms, $file if($file =~ /\.pm$/);
    }

    if(@jms == 0) {
        print "WARNING\n";
        print "No potential job managers (.pm files) were found in $directory.\n";
    }
    else {
        my $jms = join(" ", @jms);
        print "OK\n";
        print "Available job managers are: $jms\n";
    }
}
elsif ($gatekeeper_type eq 'condor-ce') {
    my $job_router_entries = `condor_ce_config_val JOB_ROUTER_ENTRIES 2>&1`;
    my $ret = $?;
    if ($ret != 0) {
        print "CRITICAL\n";
        print "Error getting JOB_ROUTER_ENTRIES\n";
        print "Output: $job_router_entries\n";
    }
    else {
        print "OK\n";
        print "Available job router entries:\n";
        # TODO: these could be better formatted
        print $job_router_entries."\n";
    }
}
else {
    print STDERR "Invalid gatekeeper-type specified. Must be either 'gram' or 'condor-ce'\n";
    exit 1;
}

exit 0;
