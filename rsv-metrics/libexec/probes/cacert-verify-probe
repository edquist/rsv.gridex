#!/usr/bin/env perl

###############################################################################
##
##
## Original Author: Anand Padmanabhan
##
## This Perl script verifies local CA by comparing md5sum with OSG distribution
## Type ./cacert-verify-local-probe -h for more information
##
##
## REQUIRES
##  'RSVProbeBase
##  'RSVProbeCACert
##
################################################################################

## Perl modules to use
use strict;
use RSVProbeBase;
use RSVProbeCACert;

######## Global variables go here ################################
our %o;         *o         = \%RSVProbeBase::o;
our %metric;    *metric    = \%RSVProbeBase::metric;

################## Local Variables for this probe #####################

&RSVProbeBase::Init();
&RSVProbeBase::Run();

## Main Program ends ##
################################################################################


################################################################################
###### Local Sub routines begin ###########
################################################################################
sub Init {

    ########## NOTE ##################################################
    ##
    ## Currently it is hard to guarantee all RSV clients, whose results are used for
    ##  availibility calculations, will use the new name. Therefore, availability
    ##  algorithms will stutter, or will need hacks. To avoid that, we are using
    ##  the old name (which does not accurately describe the metric).
    ##
    ## Especially if the OSG management agrees that only GOC-run metric results 
    ##   will be used for availability calculations, this will be easier to resolve.
    ##
    ###################################################################
    ## &RSVProbeBase::Set_MetricName ("org.osg.certificates.verify"); ## New more accurate name to be used in the future
    &RSVProbeBase::Set_MetricName ("org.osg.certificates.cacert-expiry"); ## Old metric name 

    ## Pass "status" or "performance" depending on metric type
        
    &RSVProbeBase::Set_MetricType ("status");
    &RSVProbeBase::Set_ServiceType ("OSG-CE");
    &RSVProbeBase::Set_ServiceVersion (">= OSG CE 1.0.0");
    &RSVProbeBase::Set_ProbeType ("OSG-CE");

    ## Should automating tools run this probe on above probeType by default?
    &RSVProbeBase::Set_EnableByDefault ("true");
    
    ## Unix cron type metric interval
    &RSVProbeBase::Set_MetricInterval ("15 */6 * * *");

    ## Define this value from RCS/SVN version
    ## What version of the WLCG specification does this probe conform to?
    &RSVProbeBase::Set_ProbeRevision ('3.0');
    &RSVProbeBase::Set_ProbeSpecVersion ("0.91");

    ## Basic intro for the probe; This string will be used by Print_Usage ()
    &RSVProbeBase::Set_ProbeHelpIntro 
	("IMPORTANT NOTE: This is a probe that verifies if the CA distribution at the site is upto date\n".
	 "\n This probe downloads a file contains a list of md5sum from a central location.".
	 "\n This list is compared against the md5sum of the files in the site level repository\n\n"
	 );
	
    ## Additional options to print in Usage info used by Print_Usage ()
    &RSVProbeBase::Set_ProbeHelpOptions 
    (" [--error-file <file_location>]    Location where error should be recorded\n". 
    " [--error-hours <\# hours>]    Number of hours elapsed before error is to be issued\n". 
    " [--cacerts-dir <directory> ]      Location of CA certificate files\n".
    "                                   (Default: \$VDT_LOCATION'/globus/TRUSTED_CA\n".
    " [ --type <string> ]  This parameter determines whether the test should confrom to EGEE or OSG requirement.\n".
    "                                   (Accepted values: osg, egee) (Default: osg)\n".
    " [--worker-script-file <file>     Worker script file to use.".
    " [--local-ce]          The verify test is run on localhost and not through globus gatekeeper."
    );
    
    ## Uncomment if you want additional command line options
    &RSVProbeBase::Extra_CLI_Option ("cacerts-dir=s","certDir");
    &RSVProbeBase::Extra_CLI_Option ("error-hours=i","errorHrs");
    &RSVProbeBase::Extra_CLI_Option ("error-file=s","errorFile");
    &RSVProbeBase::Extra_CLI_Option ("type=s","type");
    &RSVProbeBase::Extra_CLI_Option ("worker-script-file=s","workerScriptFile");
    &RSVProbeBase::Extra_CLI_Option ("local-ce","localCE");
   
    ## Uncomment if you do not want detailsData to be trimmed to $o{'detailsDataMaxLength}
    &RSVProbeBase::Set_DetailsDataTrim ("False");
}

sub Run {
    ## Get the remote environment variable
    if (! $o{'localCE'}){
        &RSVProbeBase::Get_Remote_Env();
    }

    ## Initialize local variables
    &Initialize_Local();

    ## Real tests begin now - check for expired certs now 
    &RSVProbeCACert::Check_Local_CA();

    ## Print metric, and we're all done!
    &RSVProbeBase::Print_Metric ();
}

## Initialize local variables
sub Initialize_Local{
    if (! $o{'certDir'}) {
	if (!defined $o{'localCE'}){
	    $o{'certDir'} =  $o{'REMOTE_ENV'}{'OSG_LOCATION'}."/globus/TRUSTED_CA";
	} else {
	    $o{'certDir'} =  $o{'VDT_LOCATION_LOCAL'}."/globus/TRUSTED_CA";
	}
    }
    $o{'errorFile'}  =  $o{'VDT_LOCATION_LOCAL'}."/osg-rsv/logs/probes/.$o{'hostName'}.cacert_verify.err" if (! $o{'errorFile'}) ;
    $o{'errorHrs'} = 3*24 if (! $o{'errorHrs'}); ## Error after 72 Hrs
    $o{'type'} = 'osg' if (! $o{'type'}); 
    $o{'workerScriptFile'} = "$o{'PROBE_DIR_LOCAL'}/worker-scripts/md5sum-ca-verify.sh" if (!defined($o{'workerScriptFile'}));
}

## None for now
