#!/usr/bin/env perl

use strict;
use warnings;
use RSVMetric;

my $warning_hours = 168;
my $warning_seconds = $warning_hours * 60 * 60;

my $critical_hours = 24;
my $critical_seconds = $critical_hours * 60 * 60;

print_output_header();

my %options = process_command_line();

find_binaries("openssl");

my %certs = ( "org.osg.local.hostcert-expiry" => "/etc/grid-security/hostcert.pem",
              "org.osg.local.httpcert-expiry" => "/etc/grid-security/http/httpcert.pem",
              # TODO - add rsvcert expiry?  Need to look at two locations, 
              # /etc/grid-security/(rsv)?/rsvcert.pem
              #"org.osg.local.rsvcert-expiry"  => "/etc/grid-security/rsvcert.pem",
);

my $cert = $certs{$options{m}};

if(!-e $cert) {
    print "CRITICAL\n";
    print "The certificate '$cert' does not exist or your RSV user does not have permission to read it.\n";
    exit 0;
}

# First we make sure we're not in the critical range (which is currently set to 
# expired or expiring within 24 hours).  After that we'll check the warning range.

my $quoted_cert = shellquote($cert);
my $openssl_cmd = "openssl x509 -in $quoted_cert -noout -checkend '$critical_seconds' 2>&1";
my $out = `$openssl_cmd`;
my $ret = $? >> 8;

if ($ret == 1) {
    my $valid = `openssl x509 -in $quoted_cert -noout -enddate 2>&1`;
    chomp $valid;

    print "CRITICAL\n";
    print "Certificate '$cert' is expired or expiring within $critical_hours hours.  It is valid until: $valid\n";
    exit 0;
}
elsif($ret != 0) {
    print "CRITICAL\n";
    print "Error running openssl command ($openssl_cmd).  Output:\n$out\n";
    dump_debug();
    exit 0;
}

$openssl_cmd = "openssl x509 -in $quoted_cert -noout -checkend '$warning_seconds' 2>&1";
$out = `$openssl_cmd`;
$ret = $? >> 8;

if($ret == 0) {
    print "OK\n";
    print "Certificate '$cert' is valid for at least $warning_hours more hours.\n";
    exit 0;
}
elsif ($ret == 1) {
    my $valid = `openssl x509 -in $quoted_cert -noout -enddate 2>&1`;
    chomp $valid;

    print "WARNING\n";
    print "Certificate '$cert' is expiring within $warning_hours hours.  It is valid until: $valid\n";
    exit 0;
}
else {
    print "CRITICAL\n";
    print "Error running openssl command ($openssl_cmd).  Output:\n$out\n";
    dump_debug();
    exit 0;
}

exit 0;
